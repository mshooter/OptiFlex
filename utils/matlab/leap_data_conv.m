% This function converts LEAP dataset to PNG-JSON dataset.

% (c) Si-yang @ PSI, 2019
% (c) LEAP and all related codes @ Talmo Pereira (talmo@princeton.edu).

% Function Input: dataFile  (str): *.h5 image-data with LEAP definition.
%                 labelFile (str): *.mat label-data generated by LEAP.
%                 outPath   (str): output path to store converted data.

function leap_data_conv(dataFile, labelFile, outPath)
  %% Get required information from inputs
  % Get dataset basic information
    [~, dataName, ~] = fileparts(dataFile);
    dataInfo = h5info(dataFile, '/box');  % H5 file with LEAP definition
    frameCount = dataInfo.Dataspace.Size(4);

  % Load label data info
    labelData = load(labelFile);
    jointNames = labelData.skeleton.nodes;
    jointPositions = labelData.positions;

  % Prepare output leaf directory
    outDir = fullfile(outPath, dataName);
    mkdir(outDir);

  %% Main processing loop
    for i = 1 : frameCount
      % Process frame
        frameName = strcat('frm_', num2str(i, '%05d'), '.png');
        framePath = fullfile(outDir, frameName);
        frame = h5readframes(dataFile, 'box', i);  % function form LEAP
        imwrite(frame, framePath);

      % Process label
        lblfName = strcat('frm_', num2str(i, '%05d'), '.json');
        lblfPath = fullfile(outDir, lblfName);
        lblfId = fopen(lblfPath, 'a');
        fprintf(lblfId, '[');  % Writing JSON starting '['
        for j = 1 : size(jointNames, 1)
            if j ~= 1; fprintf(lblfId, ','); end  % Writing JSON seperator
            fprintf(lblfId,...
                '\r\n{"left": %d, "top": %d, "width": 1, "height": 1, "label": "%s"}',...
                int32(jointPositions(j,1,i)), int32(jointPositions(j,2,i)), string(jointNames(j)));
        end
        fprintf(lblfId, '\r\n]');  % Writing JSON ending ']'
        fclose(lblfId);
    end
end
