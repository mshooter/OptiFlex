% This function converts manual labelled file form LocoMouse to general machine learning labelling file.

% (c) Si-yang @ PSI, 2019
% (c) LocoMouse and all related codes @ Megan R. Carey Lab.

% Function Input: file_name:  *.mat file generated by LocoMouse function "LocoMouse_Labelling"


function locomouse_lbl_conv(file_name)
  % Read and extract file info, process directory info
    load(file_name);
    path = fileparts(file_name);
    if isempty(path)
        path = pwd;
    end
    path_lbl = strcat(path, '\split_view');
        mkdir(path_lbl);

  % Write manual labelling general info
    lbl_info = table(["frm_init"; "frm_step"; "frm_stop"; "split_pos"], [start_frame; frame_step; "None"; split_line], 'VariableNames', {'var', 'value'});
    cd(path);
    writetable(lbl_info, 'info.csv', 'Delimiter', ',', 'WriteVariableNames', 1, 'WriteRowNames', 0);

  % Extracting label META information from LocoMouse output file "labels"@VAR
    lbl_id = [];
    % lbl_nr = [];
    for i = 1 : size(labels, 2)    % Loop ctrl of label type
        for j = 1 : size(labels{1, i}, 2)    % Loop ctrl of label group
            lbl_id = [lbl_id, string({labels{1, i}{1, j}.name})];
            lbl_nr = [1, 1, 1, 1, 1, 3];
              % SHOULD BE AS [lbl_nr, cell2mat({labels{1, i}{1, j}.N_points})]
              % but LocoMouse stupidly couldn't save N_points even modified
        end
    end

  % Extracting label POSITION information form LocoMouse output file "tracks"@VAR
    cd(path_lbl);
    count = 1;
    for i = 1 : size(tracks, 2)    % Loop ctrl of label type
        for j = 1 : size(tracks{1, i}, 2)    % Loop ctrl of label group
            for k = 1 : size(tracks{1, i}{1, j}, 2)    % Loop ctrl of label name
                for l = 1 : size(tracks{1, i}{1, j}{1, k}, 3)    % Loop ctrl of labels
                    for m = 1 : lbl_nr(count)    % Loop ctrl of multiple labels @ same name
                      % Extract current label position info
                        v_btm = tracks{1, i}{1, j}{1, k}(1:2, m, l);
                        v_sd = tracks{1, i}{1, j}{1, k}(3:4, m, l);
                      % Validating and writing label to file
                        if ~isnan(sum(v_btm)) && sum(v_btm)    % Validating bottom view label
                            file_name = strcat('btm_frm_', num2str(labelled_frames(l), '%05d'), '.json');
                            file_id = fopen(file_name, 'a');
                            file_info = dir(file_name);
                            if file_info.bytes == 0    % Detect if the file is empty
                                fprintf(file_id, '[\r\n{\r\n  "left": %d,\r\n  "top": %d,\r\n  "width": 1,\r\n  "height": 1,\r\n  "label": "%s"\r\n}', v_btm(1), (v_btm(2) - split_line), lbl_id(count));
                            else
                                fprintf(file_id, ',\r\n{\r\n  "left": %d,\r\n  "top": %d,\r\n  "width": 1,\r\n  "height": 1,\r\n  "label": "%s"\r\n}', v_btm(1), (v_btm(2) - split_line), lbl_id(count));
                            end
                            fclose(file_id);
                        end
                        if ~isnan(sum(v_sd)) && sum(v_sd)    % Validating side view label
                            file_name = strcat('sd_frm_', num2str(labelled_frames(l), '%05d'), '.json');
                            file_id = fopen(file_name, 'a');
                            file_info = dir(file_name);
                            if file_info.bytes == 0    % Detect if the file is empty
                                fprintf(file_id, '[\r\n{\r\n  "left": %d,\r\n  "top": %d,\r\n  "width": 1,\r\n  "height": 1,\r\n  "label": "%s"\r\n}', v_sd(1), v_sd(2), lbl_id(count));
                            else
                                fprintf(file_id, ',\r\n{\r\n  "left": %d,\r\n  "top": %d,\r\n  "width": 1,\r\n  "height": 1,\r\n  "label": "%s"\r\n}', v_sd(1), v_sd(2), lbl_id(count));
                            end
                            fclose(file_id);
                        end
                    end
                end
                count = count + 1;    % Label META info ctrl
            end
        end
    end

  % Finalizing output label files
    lbl_file = dir('*.json');
    for i = 1:size(lbl_file, 1)
        file_id = fopen(lbl_file(i).name, 'a');
        fprintf(file_id, '\r\n]');
        fclose(file_id);
    end

    cd(path);
end